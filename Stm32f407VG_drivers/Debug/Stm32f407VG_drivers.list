
Stm32f407VG_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000008c4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a6c  08000a74  00010a74  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a6c  08000a6c  00010a74  2**0
                  CONTENTS
  4 .ARM          00000000  08000a6c  08000a6c  00010a74  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a6c  08000a74  00010a74  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a6c  08000a6c  00010a6c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a70  08000a70  00010a70  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010a74  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000a74  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000a74  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010a74  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001173  00000000  00000000  00010aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000316  00000000  00000000  00011c17  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000c8  00000000  00000000  00011f30  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a0  00000000  00000000  00011ff8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00001fb9  00000000  00000000  00012098  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000cb5  00000000  00000000  00014051  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00009093  00000000  00000000  00014d06  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001dd99  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000028c  00000000  00000000  0001de14  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000a54 	.word	0x08000a54

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000a54 	.word	0x08000a54

080001e8 <delay>:
#include <string.h>
#include "stm32F407VG.h"
#include "stm32f407VG_gpio_driver.h"

void delay(void)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
	for(uint32_t i=0; i <500000/2; i ++);
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>
}
 8000202:	bf00      	nop
 8000204:	370c      	adds	r7, #12
 8000206:	46bd      	mov	sp, r7
 8000208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020c:	4770      	bx	lr
 800020e:	bf00      	nop
 8000210:	0003d08f 	.word	0x0003d08f

08000214 <main>:
int main(void)
{
 8000214:	b580      	push	{r7, lr}
 8000216:	b086      	sub	sp, #24
 8000218:	af00      	add	r7, sp, #0

	// LED

	GPIO_Handle_t GpioLed;
	memset(&GpioLed,0,sizeof(GpioLed));
 800021a:	f107 030c 	add.w	r3, r7, #12
 800021e:	220c      	movs	r2, #12
 8000220:	2100      	movs	r1, #0
 8000222:	4618      	mov	r0, r3
 8000224:	f000 fc0e 	bl	8000a44 <memset>
	GpioLed.pGPIOx = GPIOD;
 8000228:	4b1c      	ldr	r3, [pc, #112]	; (800029c <main+0x88>)
 800022a:	60fb      	str	r3, [r7, #12]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800022c:	230c      	movs	r3, #12
 800022e:	743b      	strb	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000230:	2301      	movs	r3, #1
 8000232:	747b      	strb	r3, [r7, #17]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000234:	2302      	movs	r3, #2
 8000236:	74bb      	strb	r3, [r7, #18]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000238:	2300      	movs	r3, #0
 800023a:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800023c:	2300      	movs	r3, #0
 800023e:	74fb      	strb	r3, [r7, #19]

	// BUTTON
	GPIO_Handle_t GpioBtn;

	// BTn does not use Output type, therefore If we dont reset it, random OP mode data will be written in.
	memset(&GpioBtn,0,sizeof(GpioBtn));
 8000240:	463b      	mov	r3, r7
 8000242:	220c      	movs	r2, #12
 8000244:	2100      	movs	r1, #0
 8000246:	4618      	mov	r0, r3
 8000248:	f000 fbfc 	bl	8000a44 <memset>

	GpioBtn.pGPIOx = GPIOA;
 800024c:	4b14      	ldr	r3, [pc, #80]	; (80002a0 <main+0x8c>)
 800024e:	603b      	str	r3, [r7, #0]
	GpioBtn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000250:	2300      	movs	r3, #0
 8000252:	713b      	strb	r3, [r7, #4]
	GpioBtn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000254:	2304      	movs	r3, #4
 8000256:	717b      	strb	r3, [r7, #5]
	GpioBtn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000258:	2302      	movs	r3, #2
 800025a:	71bb      	strb	r3, [r7, #6]
	GpioBtn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 800025c:	2300      	movs	r3, #0
 800025e:	71fb      	strb	r3, [r7, #7]


	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000260:	2101      	movs	r1, #1
 8000262:	480e      	ldr	r0, [pc, #56]	; (800029c <main+0x88>)
 8000264:	f000 f858 	bl	8000318 <GPIO_PeriClockControl>
	GPIO_PeriClockControl(GPIOA, ENABLE);
 8000268:	2101      	movs	r1, #1
 800026a:	480d      	ldr	r0, [pc, #52]	; (80002a0 <main+0x8c>)
 800026c:	f000 f854 	bl	8000318 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000270:	f107 030c 	add.w	r3, r7, #12
 8000274:	4618      	mov	r0, r3
 8000276:	f000 f937 	bl	80004e8 <GPIO_Init>
	GPIO_Init(&GpioBtn);
 800027a:	463b      	mov	r3, r7
 800027c:	4618      	mov	r0, r3
 800027e:	f000 f933 	bl	80004e8 <GPIO_Init>
	//IRQ Configuration


	GPIO_IRQPriorityHandling(IRQ_NO_EXTI0, NVIC_IRQ_PRI15);
 8000282:	210f      	movs	r1, #15
 8000284:	2006      	movs	r0, #6
 8000286:	f000 fb6d 	bl	8000964 <GPIO_IRQPriorityHandling>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0, ENABLE);
 800028a:	2101      	movs	r1, #1
 800028c:	2006      	movs	r0, #6
 800028e:	f000 fae7 	bl	8000860 <GPIO_IRQInterruptConfig>



	while(1)

	return 0;
 8000292:	2300      	movs	r3, #0
}
 8000294:	4618      	mov	r0, r3
 8000296:	3718      	adds	r7, #24
 8000298:	46bd      	mov	sp, r7
 800029a:	bd80      	pop	{r7, pc}
 800029c:	40020c00 	.word	0x40020c00
 80002a0:	40020000 	.word	0x40020000

080002a4 <EXTI0_IRQHandler>:


void EXTI0_IRQHandler(void)
{
 80002a4:	b580      	push	{r7, lr}
 80002a6:	af00      	add	r7, sp, #0
	delay();
 80002a8:	f7ff ff9e 	bl	80001e8 <delay>
	GPIO_IRQHandling(GPIO_PIN_NO_0);
 80002ac:	2000      	movs	r0, #0
 80002ae:	f000 fb85 	bl	80009bc <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 80002b2:	210c      	movs	r1, #12
 80002b4:	4802      	ldr	r0, [pc, #8]	; (80002c0 <EXTI0_IRQHandler+0x1c>)
 80002b6:	f000 fabd 	bl	8000834 <GPIO_ToggleOutputPin>
}
 80002ba:	bf00      	nop
 80002bc:	bd80      	pop	{r7, pc}
 80002be:	bf00      	nop
 80002c0:	40020c00 	.word	0x40020c00

080002c4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c4:	480d      	ldr	r0, [pc, #52]	; (80002fc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c6:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002c8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002cc:	480c      	ldr	r0, [pc, #48]	; (8000300 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ce:	490d      	ldr	r1, [pc, #52]	; (8000304 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002d0:	4a0d      	ldr	r2, [pc, #52]	; (8000308 <LoopForever+0xe>)
  movs r3, #0
 80002d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d4:	e002      	b.n	80002dc <LoopCopyDataInit>

080002d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002da:	3304      	adds	r3, #4

080002dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e0:	d3f9      	bcc.n	80002d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002e2:	4a0a      	ldr	r2, [pc, #40]	; (800030c <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e4:	4c0a      	ldr	r4, [pc, #40]	; (8000310 <LoopForever+0x16>)
  movs r3, #0
 80002e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e8:	e001      	b.n	80002ee <LoopFillZerobss>

080002ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002ec:	3204      	adds	r2, #4

080002ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f0:	d3fb      	bcc.n	80002ea <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002f2:	f000 fb83 	bl	80009fc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f6:	f7ff ff8d 	bl	8000214 <main>

080002fa <LoopForever>:

LoopForever:
    b LoopForever
 80002fa:	e7fe      	b.n	80002fa <LoopForever>
  ldr   r0, =_estack
 80002fc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000300:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000304:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000308:	08000a74 	.word	0x08000a74
  ldr r2, =_sbss
 800030c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000310:	2000001c 	.word	0x2000001c

08000314 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000314:	e7fe      	b.n	8000314 <ADC_IRQHandler>
	...

08000318 <GPIO_PeriClockControl>:
 *
 * @Note			- none
 *
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDI)
{
 8000318:	b480      	push	{r7}
 800031a:	b083      	sub	sp, #12
 800031c:	af00      	add	r7, sp, #0
 800031e:	6078      	str	r0, [r7, #4]
 8000320:	460b      	mov	r3, r1
 8000322:	70fb      	strb	r3, [r7, #3]
	if(EnorDI == ENABLE)
 8000324:	78fb      	ldrb	r3, [r7, #3]
 8000326:	2b01      	cmp	r3, #1
 8000328:	d162      	bne.n	80003f0 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a64      	ldr	r2, [pc, #400]	; (80004c0 <GPIO_PeriClockControl+0x1a8>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000332:	4b64      	ldr	r3, [pc, #400]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a63      	ldr	r2, [pc, #396]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000338:	f043 0301 	orr.w	r3, r3, #1
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
		else if (pGPIOx == GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 800033e:	e0b9      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a61      	ldr	r2, [pc, #388]	; (80004c8 <GPIO_PeriClockControl+0x1b0>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000348:	4b5e      	ldr	r3, [pc, #376]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034c:	4a5d      	ldr	r2, [pc, #372]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800034e:	f043 0302 	orr.w	r3, r3, #2
 8000352:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000354:	e0ae      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a5c      	ldr	r2, [pc, #368]	; (80004cc <GPIO_PeriClockControl+0x1b4>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d106      	bne.n	800036c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800035e:	4b59      	ldr	r3, [pc, #356]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000362:	4a58      	ldr	r2, [pc, #352]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000364:	f043 0304 	orr.w	r3, r3, #4
 8000368:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036a:	e0a3      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a58      	ldr	r2, [pc, #352]	; (80004d0 <GPIO_PeriClockControl+0x1b8>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d106      	bne.n	8000382 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000374:	4b53      	ldr	r3, [pc, #332]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000378:	4a52      	ldr	r2, [pc, #328]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800037a:	f043 0308 	orr.w	r3, r3, #8
 800037e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000380:	e098      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a53      	ldr	r2, [pc, #332]	; (80004d4 <GPIO_PeriClockControl+0x1bc>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d106      	bne.n	8000398 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800038a:	4b4e      	ldr	r3, [pc, #312]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800038e:	4a4d      	ldr	r2, [pc, #308]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000390:	f043 0310 	orr.w	r3, r3, #16
 8000394:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000396:	e08d      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a4f      	ldr	r2, [pc, #316]	; (80004d8 <GPIO_PeriClockControl+0x1c0>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d106      	bne.n	80003ae <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80003a0:	4b48      	ldr	r3, [pc, #288]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003a4:	4a47      	ldr	r2, [pc, #284]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003a6:	f043 0320 	orr.w	r3, r3, #32
 80003aa:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ac:	e082      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a4a      	ldr	r2, [pc, #296]	; (80004dc <GPIO_PeriClockControl+0x1c4>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	d106      	bne.n	80003c4 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003b6:	4b43      	ldr	r3, [pc, #268]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003ba:	4a42      	ldr	r2, [pc, #264]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003bc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80003c0:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003c2:	e077      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a46      	ldr	r2, [pc, #280]	; (80004e0 <GPIO_PeriClockControl+0x1c8>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d106      	bne.n	80003da <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80003cc:	4b3d      	ldr	r3, [pc, #244]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003d0:	4a3c      	ldr	r2, [pc, #240]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003d2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80003d6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003d8:	e06c      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4a41      	ldr	r2, [pc, #260]	; (80004e4 <GPIO_PeriClockControl+0x1cc>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	d168      	bne.n	80004b4 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 80003e2:	4b38      	ldr	r3, [pc, #224]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003e6:	4a37      	ldr	r2, [pc, #220]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80003ec:	6313      	str	r3, [r2, #48]	; 0x30
}
 80003ee:	e061      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	4a33      	ldr	r2, [pc, #204]	; (80004c0 <GPIO_PeriClockControl+0x1a8>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d106      	bne.n	8000406 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 80003f8:	4b32      	ldr	r3, [pc, #200]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80003fc:	4a31      	ldr	r2, [pc, #196]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003fe:	f023 0301 	bic.w	r3, r3, #1
 8000402:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000404:	e056      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOB)
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4a2f      	ldr	r2, [pc, #188]	; (80004c8 <GPIO_PeriClockControl+0x1b0>)
 800040a:	4293      	cmp	r3, r2
 800040c:	d106      	bne.n	800041c <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 800040e:	4b2d      	ldr	r3, [pc, #180]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000410:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000412:	4a2c      	ldr	r2, [pc, #176]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000414:	f023 0302 	bic.w	r3, r3, #2
 8000418:	6313      	str	r3, [r2, #48]	; 0x30
}
 800041a:	e04b      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOC)
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a2b      	ldr	r2, [pc, #172]	; (80004cc <GPIO_PeriClockControl+0x1b4>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d106      	bne.n	8000432 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 8000424:	4b27      	ldr	r3, [pc, #156]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000426:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000428:	4a26      	ldr	r2, [pc, #152]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800042a:	f023 0304 	bic.w	r3, r3, #4
 800042e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000430:	e040      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOD)
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	4a26      	ldr	r2, [pc, #152]	; (80004d0 <GPIO_PeriClockControl+0x1b8>)
 8000436:	4293      	cmp	r3, r2
 8000438:	d106      	bne.n	8000448 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 800043a:	4b22      	ldr	r3, [pc, #136]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800043c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800043e:	4a21      	ldr	r2, [pc, #132]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000440:	f023 0308 	bic.w	r3, r3, #8
 8000444:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000446:	e035      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOE)
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	4a22      	ldr	r2, [pc, #136]	; (80004d4 <GPIO_PeriClockControl+0x1bc>)
 800044c:	4293      	cmp	r3, r2
 800044e:	d106      	bne.n	800045e <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 8000450:	4b1c      	ldr	r3, [pc, #112]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000452:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000454:	4a1b      	ldr	r2, [pc, #108]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000456:	f023 0310 	bic.w	r3, r3, #16
 800045a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800045c:	e02a      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOF)
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	4a1d      	ldr	r2, [pc, #116]	; (80004d8 <GPIO_PeriClockControl+0x1c0>)
 8000462:	4293      	cmp	r3, r2
 8000464:	d106      	bne.n	8000474 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 8000466:	4b17      	ldr	r3, [pc, #92]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000468:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800046a:	4a16      	ldr	r2, [pc, #88]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800046c:	f023 0320 	bic.w	r3, r3, #32
 8000470:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000472:	e01f      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOG)
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	4a19      	ldr	r2, [pc, #100]	; (80004dc <GPIO_PeriClockControl+0x1c4>)
 8000478:	4293      	cmp	r3, r2
 800047a:	d106      	bne.n	800048a <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 800047c:	4b11      	ldr	r3, [pc, #68]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800047e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000480:	4a10      	ldr	r2, [pc, #64]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000482:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000486:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000488:	e014      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOH)
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	4a14      	ldr	r2, [pc, #80]	; (80004e0 <GPIO_PeriClockControl+0x1c8>)
 800048e:	4293      	cmp	r3, r2
 8000490:	d106      	bne.n	80004a0 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000492:	4b0c      	ldr	r3, [pc, #48]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000494:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000496:	4a0b      	ldr	r2, [pc, #44]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000498:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800049c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800049e:	e009      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		else if (pGPIOx == GPIOI)
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	4a10      	ldr	r2, [pc, #64]	; (80004e4 <GPIO_PeriClockControl+0x1cc>)
 80004a4:	4293      	cmp	r3, r2
 80004a6:	d105      	bne.n	80004b4 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 80004a8:	4b06      	ldr	r3, [pc, #24]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80004aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80004ac:	4a05      	ldr	r2, [pc, #20]	; (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80004ae:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80004b2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80004b4:	bf00      	nop
 80004b6:	370c      	adds	r7, #12
 80004b8:	46bd      	mov	sp, r7
 80004ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004be:	4770      	bx	lr
 80004c0:	40020000 	.word	0x40020000
 80004c4:	40023800 	.word	0x40023800
 80004c8:	40020400 	.word	0x40020400
 80004cc:	40020800 	.word	0x40020800
 80004d0:	40020c00 	.word	0x40020c00
 80004d4:	40021000 	.word	0x40021000
 80004d8:	40021400 	.word	0x40021400
 80004dc:	40021800 	.word	0x40021800
 80004e0:	40021c00 	.word	0x40021c00
 80004e4:	40022000 	.word	0x40022000

080004e8 <GPIO_Init>:
 *
 * @Note			- none
 *
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80004e8:	b480      	push	{r7}
 80004ea:	b087      	sub	sp, #28
 80004ec:	af00      	add	r7, sp, #0
 80004ee:	6078      	str	r0, [r7, #4]
	uint32_t temp;
	//1. Configure the Mode of Gpio pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	795b      	ldrb	r3, [r3, #5]
 80004f4:	2b03      	cmp	r3, #3
 80004f6:	d820      	bhi.n	800053a <GPIO_Init+0x52>
	{
		// the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	795b      	ldrb	r3, [r3, #5]
 80004fc:	461a      	mov	r2, r3
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	791b      	ldrb	r3, [r3, #4]
 8000502:	005b      	lsls	r3, r3, #1
 8000504:	fa02 f303 	lsl.w	r3, r2, r3
 8000508:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	681a      	ldr	r2, [r3, #0]
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	791b      	ldrb	r3, [r3, #4]
 8000514:	005b      	lsls	r3, r3, #1
 8000516:	2103      	movs	r1, #3
 8000518:	fa01 f303 	lsl.w	r3, r1, r3
 800051c:	43db      	mvns	r3, r3
 800051e:	4619      	mov	r1, r3
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	400a      	ands	r2, r1
 8000526:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	6819      	ldr	r1, [r3, #0]
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	681b      	ldr	r3, [r3, #0]
 8000532:	693a      	ldr	r2, [r7, #16]
 8000534:	430a      	orrs	r2, r1
 8000536:	601a      	str	r2, [r3, #0]
 8000538:	e0d2      	b.n	80006e0 <GPIO_Init+0x1f8>
	}
	else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	795b      	ldrb	r3, [r3, #5]
 800053e:	2b04      	cmp	r3, #4
 8000540:	d117      	bne.n	8000572 <GPIO_Init+0x8a>
		{
			// 1. Configure the FTSR
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000542:	4b4b      	ldr	r3, [pc, #300]	; (8000670 <GPIO_Init+0x188>)
 8000544:	68db      	ldr	r3, [r3, #12]
 8000546:	687a      	ldr	r2, [r7, #4]
 8000548:	7912      	ldrb	r2, [r2, #4]
 800054a:	4611      	mov	r1, r2
 800054c:	2201      	movs	r2, #1
 800054e:	408a      	lsls	r2, r1
 8000550:	4611      	mov	r1, r2
 8000552:	4a47      	ldr	r2, [pc, #284]	; (8000670 <GPIO_Init+0x188>)
 8000554:	430b      	orrs	r3, r1
 8000556:	60d3      	str	r3, [r2, #12]

			// 1. Clear the corresponding RTSR bit (Only 1 edge dection at this time
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000558:	4b45      	ldr	r3, [pc, #276]	; (8000670 <GPIO_Init+0x188>)
 800055a:	689b      	ldr	r3, [r3, #8]
 800055c:	687a      	ldr	r2, [r7, #4]
 800055e:	7912      	ldrb	r2, [r2, #4]
 8000560:	4611      	mov	r1, r2
 8000562:	2201      	movs	r2, #1
 8000564:	408a      	lsls	r2, r1
 8000566:	43d2      	mvns	r2, r2
 8000568:	4611      	mov	r1, r2
 800056a:	4a41      	ldr	r2, [pc, #260]	; (8000670 <GPIO_Init+0x188>)
 800056c:	400b      	ands	r3, r1
 800056e:	6093      	str	r3, [r2, #8]
 8000570:	e035      	b.n	80005de <GPIO_Init+0xf6>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	795b      	ldrb	r3, [r3, #5]
 8000576:	2b05      	cmp	r3, #5
 8000578:	d117      	bne.n	80005aa <GPIO_Init+0xc2>
		{
			// 1. Configure the RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057a:	4b3d      	ldr	r3, [pc, #244]	; (8000670 <GPIO_Init+0x188>)
 800057c:	689b      	ldr	r3, [r3, #8]
 800057e:	687a      	ldr	r2, [r7, #4]
 8000580:	7912      	ldrb	r2, [r2, #4]
 8000582:	4611      	mov	r1, r2
 8000584:	2201      	movs	r2, #1
 8000586:	408a      	lsls	r2, r1
 8000588:	4611      	mov	r1, r2
 800058a:	4a39      	ldr	r2, [pc, #228]	; (8000670 <GPIO_Init+0x188>)
 800058c:	430b      	orrs	r3, r1
 800058e:	6093      	str	r3, [r2, #8]

			// 1. Clear the corresponding FTSR bit (Only 1 edge dection at this time
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000590:	4b37      	ldr	r3, [pc, #220]	; (8000670 <GPIO_Init+0x188>)
 8000592:	68db      	ldr	r3, [r3, #12]
 8000594:	687a      	ldr	r2, [r7, #4]
 8000596:	7912      	ldrb	r2, [r2, #4]
 8000598:	4611      	mov	r1, r2
 800059a:	2201      	movs	r2, #1
 800059c:	408a      	lsls	r2, r1
 800059e:	43d2      	mvns	r2, r2
 80005a0:	4611      	mov	r1, r2
 80005a2:	4a33      	ldr	r2, [pc, #204]	; (8000670 <GPIO_Init+0x188>)
 80005a4:	400b      	ands	r3, r1
 80005a6:	60d3      	str	r3, [r2, #12]
 80005a8:	e019      	b.n	80005de <GPIO_Init+0xf6>
		}
		else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	795b      	ldrb	r3, [r3, #5]
 80005ae:	2b06      	cmp	r3, #6
 80005b0:	d115      	bne.n	80005de <GPIO_Init+0xf6>
		{
			// 1. Configure the FTSR and RTSR
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b2:	4b2f      	ldr	r3, [pc, #188]	; (8000670 <GPIO_Init+0x188>)
 80005b4:	689b      	ldr	r3, [r3, #8]
 80005b6:	687a      	ldr	r2, [r7, #4]
 80005b8:	7912      	ldrb	r2, [r2, #4]
 80005ba:	4611      	mov	r1, r2
 80005bc:	2201      	movs	r2, #1
 80005be:	408a      	lsls	r2, r1
 80005c0:	4611      	mov	r1, r2
 80005c2:	4a2b      	ldr	r2, [pc, #172]	; (8000670 <GPIO_Init+0x188>)
 80005c4:	430b      	orrs	r3, r1
 80005c6:	6093      	str	r3, [r2, #8]

			// 1. Clear the corresponding FTSR bit (Only 1 edge dection at this time
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005c8:	4b29      	ldr	r3, [pc, #164]	; (8000670 <GPIO_Init+0x188>)
 80005ca:	68db      	ldr	r3, [r3, #12]
 80005cc:	687a      	ldr	r2, [r7, #4]
 80005ce:	7912      	ldrb	r2, [r2, #4]
 80005d0:	4611      	mov	r1, r2
 80005d2:	2201      	movs	r2, #1
 80005d4:	408a      	lsls	r2, r1
 80005d6:	4611      	mov	r1, r2
 80005d8:	4a25      	ldr	r2, [pc, #148]	; (8000670 <GPIO_Init+0x188>)
 80005da:	430b      	orrs	r3, r1
 80005dc:	60d3      	str	r3, [r2, #12]

		}
		// 2. Configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 80005de:	687b      	ldr	r3, [r7, #4]
 80005e0:	791b      	ldrb	r3, [r3, #4]
 80005e2:	089b      	lsrs	r3, r3, #2
 80005e4:	75fb      	strb	r3, [r7, #23]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	791b      	ldrb	r3, [r3, #4]
 80005ea:	f003 0303 	and.w	r3, r3, #3
 80005ee:	75bb      	strb	r3, [r7, #22]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	4a1f      	ldr	r2, [pc, #124]	; (8000674 <GPIO_Init+0x18c>)
 80005f6:	4293      	cmp	r3, r2
 80005f8:	d04e      	beq.n	8000698 <GPIO_Init+0x1b0>
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	4a1e      	ldr	r2, [pc, #120]	; (8000678 <GPIO_Init+0x190>)
 8000600:	4293      	cmp	r3, r2
 8000602:	d032      	beq.n	800066a <GPIO_Init+0x182>
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	4a1c      	ldr	r2, [pc, #112]	; (800067c <GPIO_Init+0x194>)
 800060a:	4293      	cmp	r3, r2
 800060c:	d02b      	beq.n	8000666 <GPIO_Init+0x17e>
 800060e:	687b      	ldr	r3, [r7, #4]
 8000610:	681b      	ldr	r3, [r3, #0]
 8000612:	4a1b      	ldr	r2, [pc, #108]	; (8000680 <GPIO_Init+0x198>)
 8000614:	4293      	cmp	r3, r2
 8000616:	d024      	beq.n	8000662 <GPIO_Init+0x17a>
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	681b      	ldr	r3, [r3, #0]
 800061c:	4a19      	ldr	r2, [pc, #100]	; (8000684 <GPIO_Init+0x19c>)
 800061e:	4293      	cmp	r3, r2
 8000620:	d01d      	beq.n	800065e <GPIO_Init+0x176>
 8000622:	687b      	ldr	r3, [r7, #4]
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	4a18      	ldr	r2, [pc, #96]	; (8000688 <GPIO_Init+0x1a0>)
 8000628:	4293      	cmp	r3, r2
 800062a:	d016      	beq.n	800065a <GPIO_Init+0x172>
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	4a16      	ldr	r2, [pc, #88]	; (800068c <GPIO_Init+0x1a4>)
 8000632:	4293      	cmp	r3, r2
 8000634:	d00f      	beq.n	8000656 <GPIO_Init+0x16e>
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	681b      	ldr	r3, [r3, #0]
 800063a:	4a15      	ldr	r2, [pc, #84]	; (8000690 <GPIO_Init+0x1a8>)
 800063c:	4293      	cmp	r3, r2
 800063e:	d008      	beq.n	8000652 <GPIO_Init+0x16a>
 8000640:	687b      	ldr	r3, [r7, #4]
 8000642:	681b      	ldr	r3, [r3, #0]
 8000644:	4a13      	ldr	r2, [pc, #76]	; (8000694 <GPIO_Init+0x1ac>)
 8000646:	4293      	cmp	r3, r2
 8000648:	d101      	bne.n	800064e <GPIO_Init+0x166>
 800064a:	2308      	movs	r3, #8
 800064c:	e025      	b.n	800069a <GPIO_Init+0x1b2>
 800064e:	2300      	movs	r3, #0
 8000650:	e023      	b.n	800069a <GPIO_Init+0x1b2>
 8000652:	2307      	movs	r3, #7
 8000654:	e021      	b.n	800069a <GPIO_Init+0x1b2>
 8000656:	2306      	movs	r3, #6
 8000658:	e01f      	b.n	800069a <GPIO_Init+0x1b2>
 800065a:	2305      	movs	r3, #5
 800065c:	e01d      	b.n	800069a <GPIO_Init+0x1b2>
 800065e:	2304      	movs	r3, #4
 8000660:	e01b      	b.n	800069a <GPIO_Init+0x1b2>
 8000662:	2303      	movs	r3, #3
 8000664:	e019      	b.n	800069a <GPIO_Init+0x1b2>
 8000666:	2302      	movs	r3, #2
 8000668:	e017      	b.n	800069a <GPIO_Init+0x1b2>
 800066a:	2301      	movs	r3, #1
 800066c:	e015      	b.n	800069a <GPIO_Init+0x1b2>
 800066e:	bf00      	nop
 8000670:	40013c00 	.word	0x40013c00
 8000674:	40020000 	.word	0x40020000
 8000678:	40020400 	.word	0x40020400
 800067c:	40020800 	.word	0x40020800
 8000680:	40020c00 	.word	0x40020c00
 8000684:	40021000 	.word	0x40021000
 8000688:	40021400 	.word	0x40021400
 800068c:	40021800 	.word	0x40021800
 8000690:	40021c00 	.word	0x40021c00
 8000694:	40022000 	.word	0x40022000
 8000698:	2300      	movs	r3, #0
 800069a:	757b      	strb	r3, [r7, #21]
		SYSCFG_PCLK_EN();
 800069c:	4b62      	ldr	r3, [pc, #392]	; (8000828 <GPIO_Init+0x340>)
 800069e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80006a0:	4a61      	ldr	r2, [pc, #388]	; (8000828 <GPIO_Init+0x340>)
 80006a2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80006a6:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] |= portcode << (temp2*4);
 80006a8:	4a60      	ldr	r2, [pc, #384]	; (800082c <GPIO_Init+0x344>)
 80006aa:	7dfb      	ldrb	r3, [r7, #23]
 80006ac:	3302      	adds	r3, #2
 80006ae:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80006b2:	7d79      	ldrb	r1, [r7, #21]
 80006b4:	7dbb      	ldrb	r3, [r7, #22]
 80006b6:	009b      	lsls	r3, r3, #2
 80006b8:	fa01 f303 	lsl.w	r3, r1, r3
 80006bc:	4618      	mov	r0, r3
 80006be:	495b      	ldr	r1, [pc, #364]	; (800082c <GPIO_Init+0x344>)
 80006c0:	7dfb      	ldrb	r3, [r7, #23]
 80006c2:	4302      	orrs	r2, r0
 80006c4:	3302      	adds	r3, #2
 80006c6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		// 3. enable the exti interrupt delivery using IMR

			EXTI->IMR |= 1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006ca:	4b59      	ldr	r3, [pc, #356]	; (8000830 <GPIO_Init+0x348>)
 80006cc:	681b      	ldr	r3, [r3, #0]
 80006ce:	687a      	ldr	r2, [r7, #4]
 80006d0:	7912      	ldrb	r2, [r2, #4]
 80006d2:	4611      	mov	r1, r2
 80006d4:	2201      	movs	r2, #1
 80006d6:	408a      	lsls	r2, r1
 80006d8:	4611      	mov	r1, r2
 80006da:	4a55      	ldr	r2, [pc, #340]	; (8000830 <GPIO_Init+0x348>)
 80006dc:	430b      	orrs	r3, r1
 80006de:	6013      	str	r3, [r2, #0]


	}

	temp = 0;
 80006e0:	2300      	movs	r3, #0
 80006e2:	613b      	str	r3, [r7, #16]
	//2. Configure the speed
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	799b      	ldrb	r3, [r3, #6]
 80006e8:	461a      	mov	r2, r3
 80006ea:	687b      	ldr	r3, [r7, #4]
 80006ec:	791b      	ldrb	r3, [r3, #4]
 80006ee:	005b      	lsls	r3, r3, #1
 80006f0:	fa02 f303 	lsl.w	r3, r2, r3
 80006f4:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	681b      	ldr	r3, [r3, #0]
 80006fa:	689a      	ldr	r2, [r3, #8]
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	791b      	ldrb	r3, [r3, #4]
 8000700:	005b      	lsls	r3, r3, #1
 8000702:	2103      	movs	r1, #3
 8000704:	fa01 f303 	lsl.w	r3, r1, r3
 8000708:	43db      	mvns	r3, r3
 800070a:	4619      	mov	r1, r3
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	681b      	ldr	r3, [r3, #0]
 8000710:	400a      	ands	r2, r1
 8000712:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	681b      	ldr	r3, [r3, #0]
 8000718:	6899      	ldr	r1, [r3, #8]
 800071a:	687b      	ldr	r3, [r7, #4]
 800071c:	681b      	ldr	r3, [r3, #0]
 800071e:	693a      	ldr	r2, [r7, #16]
 8000720:	430a      	orrs	r2, r1
 8000722:	609a      	str	r2, [r3, #8]

		temp = 0;
 8000724:	2300      	movs	r3, #0
 8000726:	613b      	str	r3, [r7, #16]

	//3. configure the pupd setting

		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000728:	687b      	ldr	r3, [r7, #4]
 800072a:	79db      	ldrb	r3, [r3, #7]
 800072c:	461a      	mov	r2, r3
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	791b      	ldrb	r3, [r3, #4]
 8000732:	005b      	lsls	r3, r3, #1
 8000734:	fa02 f303 	lsl.w	r3, r2, r3
 8000738:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 800073a:	687b      	ldr	r3, [r7, #4]
 800073c:	681b      	ldr	r3, [r3, #0]
 800073e:	68da      	ldr	r2, [r3, #12]
 8000740:	687b      	ldr	r3, [r7, #4]
 8000742:	791b      	ldrb	r3, [r3, #4]
 8000744:	005b      	lsls	r3, r3, #1
 8000746:	2103      	movs	r1, #3
 8000748:	fa01 f303 	lsl.w	r3, r1, r3
 800074c:	43db      	mvns	r3, r3
 800074e:	4619      	mov	r1, r3
 8000750:	687b      	ldr	r3, [r7, #4]
 8000752:	681b      	ldr	r3, [r3, #0]
 8000754:	400a      	ands	r2, r1
 8000756:	60da      	str	r2, [r3, #12]
		pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	681b      	ldr	r3, [r3, #0]
 800075c:	68d9      	ldr	r1, [r3, #12]
 800075e:	687b      	ldr	r3, [r7, #4]
 8000760:	681b      	ldr	r3, [r3, #0]
 8000762:	693a      	ldr	r2, [r7, #16]
 8000764:	430a      	orrs	r2, r1
 8000766:	60da      	str	r2, [r3, #12]


		temp = 0;
 8000768:	2300      	movs	r3, #0
 800076a:	613b      	str	r3, [r7, #16]

	//4. configure the optype

		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800076c:	687b      	ldr	r3, [r7, #4]
 800076e:	7a1b      	ldrb	r3, [r3, #8]
 8000770:	461a      	mov	r2, r3
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	791b      	ldrb	r3, [r3, #4]
 8000776:	fa02 f303 	lsl.w	r3, r2, r3
 800077a:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 800077c:	687b      	ldr	r3, [r7, #4]
 800077e:	681b      	ldr	r3, [r3, #0]
 8000780:	685a      	ldr	r2, [r3, #4]
 8000782:	687b      	ldr	r3, [r7, #4]
 8000784:	791b      	ldrb	r3, [r3, #4]
 8000786:	005b      	lsls	r3, r3, #1
 8000788:	2101      	movs	r1, #1
 800078a:	fa01 f303 	lsl.w	r3, r1, r3
 800078e:	43db      	mvns	r3, r3
 8000790:	4619      	mov	r1, r3
 8000792:	687b      	ldr	r3, [r7, #4]
 8000794:	681b      	ldr	r3, [r3, #0]
 8000796:	400a      	ands	r2, r1
 8000798:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->OTYPER |= temp;
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	681b      	ldr	r3, [r3, #0]
 800079e:	6859      	ldr	r1, [r3, #4]
 80007a0:	687b      	ldr	r3, [r7, #4]
 80007a2:	681b      	ldr	r3, [r3, #0]
 80007a4:	693a      	ldr	r2, [r7, #16]
 80007a6:	430a      	orrs	r2, r1
 80007a8:	605a      	str	r2, [r3, #4]

		temp = 0;
 80007aa:	2300      	movs	r3, #0
 80007ac:	613b      	str	r3, [r7, #16]
	//5. configure the alt functionality
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode)
 80007ae:	687b      	ldr	r3, [r7, #4]
 80007b0:	7a5b      	ldrb	r3, [r3, #9]
 80007b2:	2b00      	cmp	r3, #0
 80007b4:	d031      	beq.n	800081a <GPIO_Init+0x332>
		{
			uint8_t temp1, temp2;

			temp1= pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80007b6:	687b      	ldr	r3, [r7, #4]
 80007b8:	791b      	ldrb	r3, [r3, #4]
 80007ba:	08db      	lsrs	r3, r3, #3
 80007bc:	73fb      	strb	r3, [r7, #15]
			temp2= pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80007be:	687b      	ldr	r3, [r7, #4]
 80007c0:	791b      	ldrb	r3, [r3, #4]
 80007c2:	f003 0307 	and.w	r3, r3, #7
 80007c6:	73bb      	strb	r3, [r7, #14]
			pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4*temp2) );
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	681b      	ldr	r3, [r3, #0]
 80007cc:	7bfa      	ldrb	r2, [r7, #15]
 80007ce:	3208      	adds	r2, #8
 80007d0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007d4:	7bbb      	ldrb	r3, [r7, #14]
 80007d6:	009b      	lsls	r3, r3, #2
 80007d8:	220f      	movs	r2, #15
 80007da:	fa02 f303 	lsl.w	r3, r2, r3
 80007de:	43db      	mvns	r3, r3
 80007e0:	4618      	mov	r0, r3
 80007e2:	687b      	ldr	r3, [r7, #4]
 80007e4:	681b      	ldr	r3, [r3, #0]
 80007e6:	7bfa      	ldrb	r2, [r7, #15]
 80007e8:	4001      	ands	r1, r0
 80007ea:	3208      	adds	r2, #8
 80007ec:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<(4*temp2));
 80007f0:	687b      	ldr	r3, [r7, #4]
 80007f2:	681b      	ldr	r3, [r3, #0]
 80007f4:	7bfa      	ldrb	r2, [r7, #15]
 80007f6:	3208      	adds	r2, #8
 80007f8:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80007fc:	687b      	ldr	r3, [r7, #4]
 80007fe:	7a5b      	ldrb	r3, [r3, #9]
 8000800:	461a      	mov	r2, r3
 8000802:	7bbb      	ldrb	r3, [r7, #14]
 8000804:	009b      	lsls	r3, r3, #2
 8000806:	fa02 f303 	lsl.w	r3, r2, r3
 800080a:	4618      	mov	r0, r3
 800080c:	687b      	ldr	r3, [r7, #4]
 800080e:	681b      	ldr	r3, [r3, #0]
 8000810:	7bfa      	ldrb	r2, [r7, #15]
 8000812:	4301      	orrs	r1, r0
 8000814:	3208      	adds	r2, #8
 8000816:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		}
}
 800081a:	bf00      	nop
 800081c:	371c      	adds	r7, #28
 800081e:	46bd      	mov	sp, r7
 8000820:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000824:	4770      	bx	lr
 8000826:	bf00      	nop
 8000828:	40023800 	.word	0x40023800
 800082c:	40013800 	.word	0x40013800
 8000830:	40013c00 	.word	0x40013c00

08000834 <GPIO_ToggleOutputPin>:
 *
 * @Note			- none
 *
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000834:	b480      	push	{r7}
 8000836:	b083      	sub	sp, #12
 8000838:	af00      	add	r7, sp, #0
 800083a:	6078      	str	r0, [r7, #4]
 800083c:	460b      	mov	r3, r1
 800083e:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000840:	687b      	ldr	r3, [r7, #4]
 8000842:	695b      	ldr	r3, [r3, #20]
 8000844:	78fa      	ldrb	r2, [r7, #3]
 8000846:	2101      	movs	r1, #1
 8000848:	fa01 f202 	lsl.w	r2, r1, r2
 800084c:	405a      	eors	r2, r3
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	615a      	str	r2, [r3, #20]
}
 8000852:	bf00      	nop
 8000854:	370c      	adds	r7, #12
 8000856:	46bd      	mov	sp, r7
 8000858:	f85d 7b04 	ldr.w	r7, [sp], #4
 800085c:	4770      	bx	lr
	...

08000860 <GPIO_IRQInterruptConfig>:
 *
 * @Note			- none
 *
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000860:	b480      	push	{r7}
 8000862:	b083      	sub	sp, #12
 8000864:	af00      	add	r7, sp, #0
 8000866:	4603      	mov	r3, r0
 8000868:	460a      	mov	r2, r1
 800086a:	71fb      	strb	r3, [r7, #7]
 800086c:	4613      	mov	r3, r2
 800086e:	71bb      	strb	r3, [r7, #6]

	if(EnorDi == ENABLE)
 8000870:	79bb      	ldrb	r3, [r7, #6]
 8000872:	2b01      	cmp	r3, #1
 8000874:	d133      	bne.n	80008de <GPIO_IRQInterruptConfig+0x7e>
	{
		if (IRQNumber <= 31)
 8000876:	79fb      	ldrb	r3, [r7, #7]
 8000878:	2b1f      	cmp	r3, #31
 800087a:	d80a      	bhi.n	8000892 <GPIO_IRQInterruptConfig+0x32>
		{
			//program ISER0 register
			*NVIC_ISER0 |= (1 << IRQNumber);
 800087c:	4b36      	ldr	r3, [pc, #216]	; (8000958 <GPIO_IRQInterruptConfig+0xf8>)
 800087e:	681b      	ldr	r3, [r3, #0]
 8000880:	79fa      	ldrb	r2, [r7, #7]
 8000882:	2101      	movs	r1, #1
 8000884:	fa01 f202 	lsl.w	r2, r1, r2
 8000888:	4611      	mov	r1, r2
 800088a:	4a33      	ldr	r2, [pc, #204]	; (8000958 <GPIO_IRQInterruptConfig+0xf8>)
 800088c:	430b      	orrs	r3, r1
 800088e:	6013      	str	r3, [r2, #0]
		{
			//program ISER2 register
			*NVIC_ISER2 &= ~(1 << (IRQNumber%64));
		}
	}
}
 8000890:	e05c      	b.n	800094c <GPIO_IRQInterruptConfig+0xec>
		}else if (IRQNumber >31 && IRQNumber < 64)  //32 to 64
 8000892:	79fb      	ldrb	r3, [r7, #7]
 8000894:	2b1f      	cmp	r3, #31
 8000896:	d90f      	bls.n	80008b8 <GPIO_IRQInterruptConfig+0x58>
 8000898:	79fb      	ldrb	r3, [r7, #7]
 800089a:	2b3f      	cmp	r3, #63	; 0x3f
 800089c:	d80c      	bhi.n	80008b8 <GPIO_IRQInterruptConfig+0x58>
			*NVIC_ISER1 |= (1 << (IRQNumber%32));
 800089e:	4b2f      	ldr	r3, [pc, #188]	; (800095c <GPIO_IRQInterruptConfig+0xfc>)
 80008a0:	681b      	ldr	r3, [r3, #0]
 80008a2:	79fa      	ldrb	r2, [r7, #7]
 80008a4:	f002 021f 	and.w	r2, r2, #31
 80008a8:	2101      	movs	r1, #1
 80008aa:	fa01 f202 	lsl.w	r2, r1, r2
 80008ae:	4611      	mov	r1, r2
 80008b0:	4a2a      	ldr	r2, [pc, #168]	; (800095c <GPIO_IRQInterruptConfig+0xfc>)
 80008b2:	430b      	orrs	r3, r1
 80008b4:	6013      	str	r3, [r2, #0]
 80008b6:	e049      	b.n	800094c <GPIO_IRQInterruptConfig+0xec>
		else if (IRQNumber >= 64 && IRQNumber < 96)
 80008b8:	79fb      	ldrb	r3, [r7, #7]
 80008ba:	2b3f      	cmp	r3, #63	; 0x3f
 80008bc:	d946      	bls.n	800094c <GPIO_IRQInterruptConfig+0xec>
 80008be:	79fb      	ldrb	r3, [r7, #7]
 80008c0:	2b5f      	cmp	r3, #95	; 0x5f
 80008c2:	d843      	bhi.n	800094c <GPIO_IRQInterruptConfig+0xec>
			*NVIC_ISER2 |= (1 << (IRQNumber%64));
 80008c4:	4b26      	ldr	r3, [pc, #152]	; (8000960 <GPIO_IRQInterruptConfig+0x100>)
 80008c6:	681b      	ldr	r3, [r3, #0]
 80008c8:	79fa      	ldrb	r2, [r7, #7]
 80008ca:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80008ce:	2101      	movs	r1, #1
 80008d0:	fa01 f202 	lsl.w	r2, r1, r2
 80008d4:	4611      	mov	r1, r2
 80008d6:	4a22      	ldr	r2, [pc, #136]	; (8000960 <GPIO_IRQInterruptConfig+0x100>)
 80008d8:	430b      	orrs	r3, r1
 80008da:	6013      	str	r3, [r2, #0]
}
 80008dc:	e036      	b.n	800094c <GPIO_IRQInterruptConfig+0xec>
		if (IRQNumber <= 31)
 80008de:	79fb      	ldrb	r3, [r7, #7]
 80008e0:	2b1f      	cmp	r3, #31
 80008e2:	d80b      	bhi.n	80008fc <GPIO_IRQInterruptConfig+0x9c>
			*NVIC_ISER0 &= ~(1 << IRQNumber);
 80008e4:	4b1c      	ldr	r3, [pc, #112]	; (8000958 <GPIO_IRQInterruptConfig+0xf8>)
 80008e6:	681b      	ldr	r3, [r3, #0]
 80008e8:	79fa      	ldrb	r2, [r7, #7]
 80008ea:	2101      	movs	r1, #1
 80008ec:	fa01 f202 	lsl.w	r2, r1, r2
 80008f0:	43d2      	mvns	r2, r2
 80008f2:	4611      	mov	r1, r2
 80008f4:	4a18      	ldr	r2, [pc, #96]	; (8000958 <GPIO_IRQInterruptConfig+0xf8>)
 80008f6:	400b      	ands	r3, r1
 80008f8:	6013      	str	r3, [r2, #0]
}
 80008fa:	e027      	b.n	800094c <GPIO_IRQInterruptConfig+0xec>
		}else if (IRQNumber >31 && IRQNumber < 64)  //32 to 64
 80008fc:	79fb      	ldrb	r3, [r7, #7]
 80008fe:	2b1f      	cmp	r3, #31
 8000900:	d910      	bls.n	8000924 <GPIO_IRQInterruptConfig+0xc4>
 8000902:	79fb      	ldrb	r3, [r7, #7]
 8000904:	2b3f      	cmp	r3, #63	; 0x3f
 8000906:	d80d      	bhi.n	8000924 <GPIO_IRQInterruptConfig+0xc4>
			*NVIC_ISER1 &= ~(1 << (IRQNumber%32));
 8000908:	4b14      	ldr	r3, [pc, #80]	; (800095c <GPIO_IRQInterruptConfig+0xfc>)
 800090a:	681b      	ldr	r3, [r3, #0]
 800090c:	79fa      	ldrb	r2, [r7, #7]
 800090e:	f002 021f 	and.w	r2, r2, #31
 8000912:	2101      	movs	r1, #1
 8000914:	fa01 f202 	lsl.w	r2, r1, r2
 8000918:	43d2      	mvns	r2, r2
 800091a:	4611      	mov	r1, r2
 800091c:	4a0f      	ldr	r2, [pc, #60]	; (800095c <GPIO_IRQInterruptConfig+0xfc>)
 800091e:	400b      	ands	r3, r1
 8000920:	6013      	str	r3, [r2, #0]
 8000922:	e013      	b.n	800094c <GPIO_IRQInterruptConfig+0xec>
		else if (IRQNumber >= 64 && IRQNumber < 96)
 8000924:	79fb      	ldrb	r3, [r7, #7]
 8000926:	2b3f      	cmp	r3, #63	; 0x3f
 8000928:	d910      	bls.n	800094c <GPIO_IRQInterruptConfig+0xec>
 800092a:	79fb      	ldrb	r3, [r7, #7]
 800092c:	2b5f      	cmp	r3, #95	; 0x5f
 800092e:	d80d      	bhi.n	800094c <GPIO_IRQInterruptConfig+0xec>
			*NVIC_ISER2 &= ~(1 << (IRQNumber%64));
 8000930:	4b0b      	ldr	r3, [pc, #44]	; (8000960 <GPIO_IRQInterruptConfig+0x100>)
 8000932:	681b      	ldr	r3, [r3, #0]
 8000934:	79fa      	ldrb	r2, [r7, #7]
 8000936:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800093a:	2101      	movs	r1, #1
 800093c:	fa01 f202 	lsl.w	r2, r1, r2
 8000940:	43d2      	mvns	r2, r2
 8000942:	4611      	mov	r1, r2
 8000944:	4a06      	ldr	r2, [pc, #24]	; (8000960 <GPIO_IRQInterruptConfig+0x100>)
 8000946:	400b      	ands	r3, r1
 8000948:	6013      	str	r3, [r2, #0]
}
 800094a:	e7ff      	b.n	800094c <GPIO_IRQInterruptConfig+0xec>
 800094c:	bf00      	nop
 800094e:	370c      	adds	r7, #12
 8000950:	46bd      	mov	sp, r7
 8000952:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000956:	4770      	bx	lr
 8000958:	e000e100 	.word	0xe000e100
 800095c:	e000e104 	.word	0xe000e104
 8000960:	e000e108 	.word	0xe000e108

08000964 <GPIO_IRQPriorityHandling>:
 *
 * @Note			- none
 *
 */
void GPIO_IRQPriorityHandling(uint8_t IRQNumber, uint32_t IRQPriority)
{
 8000964:	b480      	push	{r7}
 8000966:	b085      	sub	sp, #20
 8000968:	af00      	add	r7, sp, #0
 800096a:	4603      	mov	r3, r0
 800096c:	6039      	str	r1, [r7, #0]
 800096e:	71fb      	strb	r3, [r7, #7]
	uint8_t iprx= IRQNumber/4;
 8000970:	79fb      	ldrb	r3, [r7, #7]
 8000972:	089b      	lsrs	r3, r3, #2
 8000974:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 8000976:	79fb      	ldrb	r3, [r7, #7]
 8000978:	f003 0303 	and.w	r3, r3, #3
 800097c:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount = (8*iprx_section + 8 - NO_PR_BITS_IMPLEMENTED);
 800097e:	7bbb      	ldrb	r3, [r7, #14]
 8000980:	3301      	adds	r3, #1
 8000982:	b2db      	uxtb	r3, r3
 8000984:	00db      	lsls	r3, r3, #3
 8000986:	b2db      	uxtb	r3, r3
 8000988:	3b04      	subs	r3, #4
 800098a:	737b      	strb	r3, [r7, #13]
	*(NVIC_PR_BASE_ADDR + (iprx)) |= (IRQPriority <<  shift_amount);
 800098c:	7bfb      	ldrb	r3, [r7, #15]
 800098e:	009b      	lsls	r3, r3, #2
 8000990:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000994:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000998:	6819      	ldr	r1, [r3, #0]
 800099a:	7b7b      	ldrb	r3, [r7, #13]
 800099c:	683a      	ldr	r2, [r7, #0]
 800099e:	409a      	lsls	r2, r3
 80009a0:	7bfb      	ldrb	r3, [r7, #15]
 80009a2:	009b      	lsls	r3, r3, #2
 80009a4:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80009a8:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80009ac:	430a      	orrs	r2, r1
 80009ae:	601a      	str	r2, [r3, #0]

}
 80009b0:	bf00      	nop
 80009b2:	3714      	adds	r7, #20
 80009b4:	46bd      	mov	sp, r7
 80009b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009ba:	4770      	bx	lr

080009bc <GPIO_IRQHandling>:
 *
 * @Note			- none
 *
 */
void GPIO_IRQHandling(uint8_t PinNumber)
{
 80009bc:	b480      	push	{r7}
 80009be:	b083      	sub	sp, #12
 80009c0:	af00      	add	r7, sp, #0
 80009c2:	4603      	mov	r3, r0
 80009c4:	71fb      	strb	r3, [r7, #7]
	//clear the exti pr register corresponding to the pin number
	if (EXTI->PR & (1 <<PinNumber))
 80009c6:	4b0c      	ldr	r3, [pc, #48]	; (80009f8 <GPIO_IRQHandling+0x3c>)
 80009c8:	695b      	ldr	r3, [r3, #20]
 80009ca:	79fa      	ldrb	r2, [r7, #7]
 80009cc:	2101      	movs	r1, #1
 80009ce:	fa01 f202 	lsl.w	r2, r1, r2
 80009d2:	4013      	ands	r3, r2
 80009d4:	2b00      	cmp	r3, #0
 80009d6:	d009      	beq.n	80009ec <GPIO_IRQHandling+0x30>
	{
		//clear
		EXTI->PR |= (1 << PinNumber);
 80009d8:	4b07      	ldr	r3, [pc, #28]	; (80009f8 <GPIO_IRQHandling+0x3c>)
 80009da:	695b      	ldr	r3, [r3, #20]
 80009dc:	79fa      	ldrb	r2, [r7, #7]
 80009de:	2101      	movs	r1, #1
 80009e0:	fa01 f202 	lsl.w	r2, r1, r2
 80009e4:	4611      	mov	r1, r2
 80009e6:	4a04      	ldr	r2, [pc, #16]	; (80009f8 <GPIO_IRQHandling+0x3c>)
 80009e8:	430b      	orrs	r3, r1
 80009ea:	6153      	str	r3, [r2, #20]

	}
}
 80009ec:	bf00      	nop
 80009ee:	370c      	adds	r7, #12
 80009f0:	46bd      	mov	sp, r7
 80009f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009f6:	4770      	bx	lr
 80009f8:	40013c00 	.word	0x40013c00

080009fc <__libc_init_array>:
 80009fc:	b570      	push	{r4, r5, r6, lr}
 80009fe:	4e0d      	ldr	r6, [pc, #52]	; (8000a34 <__libc_init_array+0x38>)
 8000a00:	4c0d      	ldr	r4, [pc, #52]	; (8000a38 <__libc_init_array+0x3c>)
 8000a02:	1ba4      	subs	r4, r4, r6
 8000a04:	10a4      	asrs	r4, r4, #2
 8000a06:	2500      	movs	r5, #0
 8000a08:	42a5      	cmp	r5, r4
 8000a0a:	d109      	bne.n	8000a20 <__libc_init_array+0x24>
 8000a0c:	4e0b      	ldr	r6, [pc, #44]	; (8000a3c <__libc_init_array+0x40>)
 8000a0e:	4c0c      	ldr	r4, [pc, #48]	; (8000a40 <__libc_init_array+0x44>)
 8000a10:	f000 f820 	bl	8000a54 <_init>
 8000a14:	1ba4      	subs	r4, r4, r6
 8000a16:	10a4      	asrs	r4, r4, #2
 8000a18:	2500      	movs	r5, #0
 8000a1a:	42a5      	cmp	r5, r4
 8000a1c:	d105      	bne.n	8000a2a <__libc_init_array+0x2e>
 8000a1e:	bd70      	pop	{r4, r5, r6, pc}
 8000a20:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000a24:	4798      	blx	r3
 8000a26:	3501      	adds	r5, #1
 8000a28:	e7ee      	b.n	8000a08 <__libc_init_array+0xc>
 8000a2a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000a2e:	4798      	blx	r3
 8000a30:	3501      	adds	r5, #1
 8000a32:	e7f2      	b.n	8000a1a <__libc_init_array+0x1e>
 8000a34:	08000a6c 	.word	0x08000a6c
 8000a38:	08000a6c 	.word	0x08000a6c
 8000a3c:	08000a6c 	.word	0x08000a6c
 8000a40:	08000a70 	.word	0x08000a70

08000a44 <memset>:
 8000a44:	4402      	add	r2, r0
 8000a46:	4603      	mov	r3, r0
 8000a48:	4293      	cmp	r3, r2
 8000a4a:	d100      	bne.n	8000a4e <memset+0xa>
 8000a4c:	4770      	bx	lr
 8000a4e:	f803 1b01 	strb.w	r1, [r3], #1
 8000a52:	e7f9      	b.n	8000a48 <memset+0x4>

08000a54 <_init>:
 8000a54:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a56:	bf00      	nop
 8000a58:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a5a:	bc08      	pop	{r3}
 8000a5c:	469e      	mov	lr, r3
 8000a5e:	4770      	bx	lr

08000a60 <_fini>:
 8000a60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a62:	bf00      	nop
 8000a64:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a66:	bc08      	pop	{r3}
 8000a68:	469e      	mov	lr, r3
 8000a6a:	4770      	bx	lr
