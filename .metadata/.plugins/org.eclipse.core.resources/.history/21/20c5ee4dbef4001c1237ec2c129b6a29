/*
 * stm32f407VG_gpio_driver.h
 *
 *  Created on: Jun 25, 2022
 *      Author: lamqi
 */

#include "stm32f407VG.h"


typedef struct
{
	uint8_t GPIO_PinNumber; // use uint8 because uint8 is 1 byte and
	uint8_t GPIO_PinMode;   // Pins only go from 0-16 so 1 byte
	uint8_t GPIO_PinSppeed; // is enough
	uint8_t GPIO_PinPuPdControl;
	uint8_t GPIO_PinOPType;
	uint8_t GPIO_PinAltFunMode;
}GPIO_PinConfig_t;



typedef struct
{
	// pointer to hold the base address of the GPIO peripheral

	GPIO_RegDef_t *pGPIOx;
	GPIO_PinConfig_t GPIO_PinConfig;

}GPIO_Handle_t;



/**************************************************************************
 * 							APIS Supported by this driver
 *
 ***************************************************************************/
/*
 *  Peripheral clock setup, GPIO_RegDef_t = base address of GPIOA
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi);
/*
 * GPIO init and De-init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle);
void GPIO_DeInit(GPIO_RegDef_t *pGPIOx); //use Peripheral RST register
/*
 * Data Read and Write
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber);
uint16_t GPIO_ReadFromInputPort(GPIO_RegDef_t *pGPIOx);
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t Value);
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t Value);
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber);
/*
 * IRQ Configuration and ISR Handling
 */
void GPIO_IRQConfig(void);
void GPIO_IRQHandling(void);



























